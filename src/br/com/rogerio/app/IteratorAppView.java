/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.rogerio.app;

import br.com.rogerio.dal.AlunoDal;
import br.com.rogerio.model.Aluno;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author roger
 */
public class IteratorAppView extends javax.swing.JFrame {

    DefaultTableModel model;

    AlunoDal dal;

    /**
     * Creates new form IteratorAppView
     */
    public IteratorAppView() {
        initComponents();
        model = (DefaultTableModel) jTableAlunos.getModel();

        dal = new AlunoDal("C:\\Users\\roger\\Documents\\NetBeansProjects\\"
                + "Projeto Iterator Exemplo Professor\\src\\br\\com\\rogerio\\util"
                + "\\ListaGeralDeDados(1)-Copia.csv");
    }

    private void imprimirDadosDoAluno(Iterator conjunto) {

        try {
            model.setNumRows(0);
            while(conjunto.hasNext()){
                String[] linha = new String [2];
                Aluno objetoAluno = (Aluno)conjunto.next();
                linha[0] = objetoAluno.getMatricula();
                linha[1] = objetoAluno.getNome().toUpperCase();
                model.addRow(linha);
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }

    private void imprimirDadosDoAluno1 (Iterator conjunto) throws Exception {

        try {
           model.setNumRows(0);
            while(conjunto.hasNext()){
                String[] linha = new String [2];
                Aluno objetoAluno = (Aluno)conjunto.next();
                linha[0] = objetoAluno.getMatricula();
                linha[1] = objetoAluno.getNome().toUpperCase();
                model.addRow(linha);
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelIteratorAlunos = new javax.swing.JPanel();
        jButtonListarComVetor = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonListarComArrayList = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlunos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Padrão de Projeto Iterator - Exemplo do Professor");

        jPanelIteratorAlunos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButtonListarComVetor.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jButtonListarComVetor.setText("Listar os Alunos - Vetor");
        jButtonListarComVetor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarComVetorActionPerformed(evt);
            }
        });

        jButtonLimpar.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonListarComArrayList.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jButtonListarComArrayList.setText("Listar os Alunos - ArrayList");
        jButtonListarComArrayList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarComArrayListActionPerformed(evt);
            }
        });

        jTableAlunos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Matrícula", "Nome do Aluno"
            }
        ));
        jScrollPane1.setViewportView(jTableAlunos);
        if (jTableAlunos.getColumnModel().getColumnCount() > 0) {
            jTableAlunos.getColumnModel().getColumn(0).setMinWidth(170);
            jTableAlunos.getColumnModel().getColumn(0).setPreferredWidth(170);
            jTableAlunos.getColumnModel().getColumn(0).setMaxWidth(170);
        }

        javax.swing.GroupLayout jPanelIteratorAlunosLayout = new javax.swing.GroupLayout(jPanelIteratorAlunos);
        jPanelIteratorAlunos.setLayout(jPanelIteratorAlunosLayout);
        jPanelIteratorAlunosLayout.setHorizontalGroup(
            jPanelIteratorAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIteratorAlunosLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jButtonListarComVetor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(jButtonLimpar)
                .addGap(107, 107, 107)
                .addComponent(jButtonListarComArrayList)
                .addGap(34, 34, 34))
            .addComponent(jScrollPane1)
        );
        jPanelIteratorAlunosLayout.setVerticalGroup(
            jPanelIteratorAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIteratorAlunosLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelIteratorAlunosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonListarComVetor)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonListarComArrayList))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelIteratorAlunos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelIteratorAlunos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonListarComVetorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarComVetorActionPerformed
        // TODO add your handling code here:
        try {
            imprimirDadosDoAluno(dal.listagemDeAlunosVetor());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar os alunos" + erro.getMessage());
        }
    }//GEN-LAST:event_jButtonListarComVetorActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        // TODO add your handling code here:
        model.setNumRows(0);
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonListarComArrayListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarComArrayListActionPerformed
        // TODO add your handling code here:
        try {
            imprimirDadosDoAluno1(dal.listagemDeAlunosArrayList());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }//GEN-LAST:event_jButtonListarComArrayListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IteratorAppView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IteratorAppView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IteratorAppView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IteratorAppView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IteratorAppView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonListarComArrayList;
    private javax.swing.JButton jButtonListarComVetor;
    private javax.swing.JPanel jPanelIteratorAlunos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlunos;
    // End of variables declaration//GEN-END:variables
}
